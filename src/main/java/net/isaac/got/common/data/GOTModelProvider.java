package net.isaac.got.common.data;

import com.google.common.collect.ImmutableMap;
import net.fabricmc.fabric.api.client.rendering.v1.ColorProviderRegistry;
import net.fabricmc.fabric.api.datagen.v1.FabricDataOutput;
import net.fabricmc.fabric.api.datagen.v1.provider.FabricModelProvider;
import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;
import net.isaac.got.GOT;
import net.isaac.got.common.block.GOTBlocks;
import net.isaac.got.common.item.other.GOTOther;
import net.isaac.got.common.item.tool.GOTTools;
import net.isaac.got.common.item.weapon.GOTWeapons;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.PillarBlock;
import net.minecraft.data.client.*;
import net.minecraft.state.property.Properties;
import net.minecraft.util.Identifier;

import java.util.Arrays;
import java.util.List;

public class GOTModelProvider extends FabricModelProvider {
    public GOTModelProvider(FabricDataOutput output) {
        super(output);
    }

    @Override
    public void generateBlockStateModels(BlockStateModelGenerator blockStateModelGenerator) {
        /* FUNCTIONAL */
        blockStateModelGenerator.registerCooker(GOTBlocks.Alloy_Forge, TexturedModel.ORIENTABLE);
        blockStateModelGenerator.registerCooker(GOTBlocks.Oven, TexturedModel.ORIENTABLE);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Arryn_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Asshai_Table, GOTBlocks.Charred_Planks, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Braavos_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Crownlands_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Dorne_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Dothraki_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Dragonstone_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Ghiscar_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Gift_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Hill_Tribes_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Ibben_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Ironborn_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Jogos_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Lhazar_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Lorath_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Lys_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Mossovy_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Myr_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.North_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Norvos_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Pentos_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Qarth_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Qohor_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Reach_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Riverlands_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Sothoryos_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Stormlands_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Summer_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Tyrosh_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Volantis_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Westerlands_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Wildling_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);
        blockStateModelGenerator.registerCubeWithCustomTextures(GOTBlocks.Yiti_Table, Blocks.OAK_PLANKS, TextureMap::frontSideWithCustomBottom);

        /* FOOD */
        CakeBlockGenerator.generateBlockJson("apple_crumble");
        CakeBlockGenerator.generateBlockJson("banana_cake");
        CakeBlockGenerator.generateBlockJson("berry_pie");
        CakeBlockGenerator.generateBlockJson("cherry_pie");
        blockStateModelGenerator.registerCrop(GOTBlocks.Cucumber, Properties.AGE_3, 0, 1, 2, 3);
        blockStateModelGenerator.registerCrop(GOTBlocks.Flax, Properties.AGE_3, 0, 1, 2, 3);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Kebab_Block);
        blockStateModelGenerator.registerCrop(GOTBlocks.Leek, Properties.AGE_3, 0, 1, 2, 3);
        CakeBlockGenerator.generateBlockJson("lemon_cake");
        blockStateModelGenerator.registerCrop(GOTBlocks.Lettuce, Properties.AGE_3, 0, 1, 2, 3);
        CakeBlockGenerator.generateBlockJson("marzipan");
        CakeBlockGenerator.generateBlockJson("pastry");
        blockStateModelGenerator.registerCrop(GOTBlocks.Pipeweed, Properties.AGE_3, 0, 1, 2, 3);
        blockStateModelGenerator.registerCrop(GOTBlocks.Rice, Properties.AGE_7, 0, 1, 2, 3, 4, 5, 6, 7);
        blockStateModelGenerator.registerCrop(GOTBlocks.Turnip, Properties.AGE_3, 0, 1, 2, 3);
        blockStateModelGenerator.registerCrop(GOTBlocks.Yam, Properties.AGE_3, 0, 1, 2, 3);


        /* NATURAL */
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Arid_Grass, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Asshai_Dirt);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Asshai_Flower, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Asshai_Grass, BlockStateModelGenerator.TintType.TINTED);
        MossGenerator.generateBlockJson("asshai_moss");
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Asshai_Thorn, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Gravel);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Blackroot, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Bluebell, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Corn_Stalk, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Corn_Stalk_Corn, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Dead_Marsh_Plant, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Bruschatka);
        SlabGenerator.generateBlockJson("dirt_path_brus");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Dirt_Path);
        SlabGenerator.generateBlockJson("dirt_path_dirt");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Jungle_Mud_Path);
        SlabGenerator.generateBlockJson("dirt_path_mud");
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Double_Flower_Black_Iris, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Double_Flower_Pink, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Double_Flower_Red, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Double_Flower_Yellow_Iris, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Essos_Flower_Daisy, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Essos_Flower_Pink, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Essos_Flower_Red, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Essos_Flower_Red2, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Essos_Flower_Yellow, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fruit_Leaves_Apple);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fruit_Leaves_Cherry);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fruit_Leaves_Mango);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fruit_Leaves_Pear);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fruit_Sapling_Apple, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fruit_Sapling_Cherry, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fruit_Sapling_Mango, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fruit_Sapling_Pear, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerLog(GOTBlocks.Fruit_Wood_Apple).log(GOTBlocks.Fruit_Wood_Apple);
        blockStateModelGenerator.registerLog(GOTBlocks.Fruit_Wood_Cherry).log(GOTBlocks.Fruit_Wood_Cherry);
        blockStateModelGenerator.registerLog(GOTBlocks.Fruit_Wood_Mango).log(GOTBlocks.Fruit_Wood_Mango);
        blockStateModelGenerator.registerLog(GOTBlocks.Fruit_Wood_Pear).log(GOTBlocks.Fruit_Wood_Pear);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Catalpa_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ibbinia_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ulthos_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ulthos_Red_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Aramant_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Banana_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Beech_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Holly_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Date_Palm_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Larch_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mangrove_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Maple_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Baobab_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Cedar_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Chestnut_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fir_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Lemon_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Lime_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Orange_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pine_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Cypress_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mahogany_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Olive_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Willow_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Almond_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Aspen_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fotinia_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Green_Oak_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Palm_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Plum_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pomegranate_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Redwood_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Dragon_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Kanuka_Leaves);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Weirwood_Leaves);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Marigold, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerWallPlant(GOTBlocks.Mirk_Vines);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mud);
        FarmlandGenerator.generateBlockJson("mud_farmland", "mud");
        GrassBlockGenerator.generateBlockJson("mud_grass", "mud");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Obsidian_Gravel);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Cobalt);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Gem_Amber);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Gem_Opal);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Gem_Ruby);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Gem_Sapphire);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Gem_Topaz);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Glowstone);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Salt);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Saltpeter);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Silver);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Sulfur);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Tin);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ore_Valyrian);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Quagmire);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Quicksand);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Remains);
        blockStateModelGenerator.registerLog(GOTBlocks.Rotten_Log).log(GOTBlocks.Rotten_Log);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Catalpa_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Ibbinia_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Ulthos_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Ulthos_Red_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Aramant_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Banana_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Beech_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Holly_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Date_Palm_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Larch_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Mangrove_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Maple_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Baobab_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Cedar_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chestnut_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fir_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Lemon_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Lime_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Orange_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Pine_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Cypress_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Mahogany_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Olive_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Willow_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Almond_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Aspen_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fotinia_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Green_Oak_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Palm_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Plum_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Pomegranate_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Redwood_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Dragon_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Kanuka_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Weirwood_Sapling, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Scorched_Stone);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Fernsprout, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Grass_Flower, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Grass_Nettle, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Short_Grass, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Thistle, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Grass_Wheat, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Termite_Mound);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.White_Sand);
        SlabGenerator.generateBlockJson("white_sand");
        SandStoneGenerator.generateBlockJson("white_sandstone");
        SandStoneGenerator.generateSlabJson("white_sandstone");
        SandStoneGenerator.generateStairsJson("white_sandstone");
        blockStateModelGenerator.registerWallPlant(GOTBlocks.Willow_Vines);
        blockStateModelGenerator.registerLog(GOTBlocks.Catalpa_Wood).log(GOTBlocks.Catalpa_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Charred_Wood).log(GOTBlocks.Charred_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Ibbinia_Wood).log(GOTBlocks.Ibbinia_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Ulthos_Wood).log(GOTBlocks.Ulthos_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Aramant_Wood).log(GOTBlocks.Aramant_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Banana_Wood).log(GOTBlocks.Banana_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Beech_Wood).log(GOTBlocks.Beech_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Holly_Wood).log(GOTBlocks.Holly_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Date_Palm_Wood).log(GOTBlocks.Date_Palm_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Larch_Wood).log(GOTBlocks.Larch_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Mangrove_Wood).log(GOTBlocks.Mangrove_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Maple_Wood).log(GOTBlocks.Maple_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Baobab_Wood).log(GOTBlocks.Baobab_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Cedar_Wood).log(GOTBlocks.Cedar_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Chestnut_Wood).log(GOTBlocks.Chestnut_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Fir_Wood).log(GOTBlocks.Fir_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Lemon_Wood).log(GOTBlocks.Lemon_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Lime_Wood).log(GOTBlocks.Lime_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Orange_Wood).log(GOTBlocks.Orange_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Pine_Wood).log(GOTBlocks.Pine_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Cypress_Wood).log(GOTBlocks.Cypress_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Mahogany_Wood).log(GOTBlocks.Mahogany_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Olive_Wood).log(GOTBlocks.Olive_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Willow_Wood).log(GOTBlocks.Willow_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Almond_Wood).log(GOTBlocks.Almond_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Aspen_Wood).log(GOTBlocks.Aspen_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Fotinia_Wood).log(GOTBlocks.Fotinia_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Green_Oak_Wood).log(GOTBlocks.Green_Oak_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Palm_Wood).log(GOTBlocks.Palm_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Plum_Wood).log(GOTBlocks.Plum_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Pomegranate_Wood).log(GOTBlocks.Pomegranate_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Redwood_Wood).log(GOTBlocks.Redwood_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Dragon_Wood).log(GOTBlocks.Dragon_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Kanuka_Wood).log(GOTBlocks.Kanuka_Wood);
        blockStateModelGenerator.registerLog(GOTBlocks.Weirwood_Wood).log(GOTBlocks.Weirwood_Wood);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Yiti_Flower_Blue, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Yiti_Flower_Orange, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Yiti_Flower_Pink, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Yiti_Flower_White, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Yiti_Flower_Yellow, BlockStateModelGenerator.TintType.TINTED);


        /* BULDING */
        PaneBlockGenerator.generateBlockJson("asshai_bars");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Bone_Block);
        SlabGenerator.generateBlockJson("bone_block");
        StairGenerator.generateBlockJson("bone_block");
        WallGenerator.generateBlockJson("bone_block");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Andesite_Brick);
        SlabGenerator.generateBlockJson("brick1_andesite");
        StairGenerator.generateBlockJson("brick1_andesite");
        WallGenerator.generateBlockJson("brick1_andesite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Andesite_Brick_Carved);
        SlabGenerator.generateBlockJson("brick1_andesite_carved");
        StairGenerator.generateBlockJson("brick1_andesite_carved");
        WallGenerator.generateBlockJson("brick1_andesite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Andesite_Brick_Cracked);
        SlabGenerator.generateBlockJson("brick1_andesite_cracked");
        StairGenerator.generateBlockJson("brick1_andesite_cracked");
        WallGenerator.generateBlockJson("brick1_andesite_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Andesite_Brick_Mossy);
        SlabGenerator.generateBlockJson("brick1_andesite_mossy");
        StairGenerator.generateBlockJson("brick1_andesite_mossy");
        WallGenerator.generateBlockJson("brick1_andesite_mossy");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Brick);
        SlabGenerator.generateBlockJson("brick1_basalt");
        StairGenerator.generateBlockJson("brick1_basalt");
        WallGenerator.generateBlockJson("brick1_basalt");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Brick_Cracked);
        SlabGenerator.generateBlockJson("brick1_basalt_cracked");
        StairGenerator.generateBlockJson("brick1_basalt_cracked");
        WallGenerator.generateBlockJson("brick1_basalt_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Diorite_Brick);
        SlabGenerator.generateBlockJson("brick1_diorite");
        StairGenerator.generateBlockJson("brick1_diorite");
        WallGenerator.generateBlockJson("brick1_diorite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Rhyolite_Brick);
        SlabGenerator.generateBlockJson("brick1_rhyolite");
        StairGenerator.generateBlockJson("brick1_rhyolite");
        WallGenerator.generateBlockJson("brick1_rhyolite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Brick);
        SlabGenerator.generateBlockJson("brick1_sandstone");
        StairGenerator.generateBlockJson("brick1_sandstone");
        WallGenerator.generateBlockJson("brick1_sandstone");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Carved_Brick);
        SlabGenerator.generateBlockJson("brick2_basalt_carved");
        StairGenerator.generateBlockJson("brick2_basalt_carved");
        WallGenerator.generateBlockJson("brick2_basalt_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Westeros_Brick);
        SlabGenerator.generateBlockJson("brick2_basalt_westeros");
        StairGenerator.generateBlockJson("brick2_basalt_westeros");
        WallGenerator.generateBlockJson("brick2_basalt_westeros");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Granite_Brick);
        SlabGenerator.generateBlockJson("brick2_granite");
        StairGenerator.generateBlockJson("brick2_granite");
        WallGenerator.generateBlockJson("brick2_granite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Diorite_Carved_Brick);
        SlabGenerator.generateBlockJson("brick3_diorite_carved");
        StairGenerator.generateBlockJson("brick3_diorite_carved");
        WallGenerator.generateBlockJson("brick3_diorite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Granite_Carved_Brick);
        SlabGenerator.generateBlockJson("brick3_granite_carved");
        StairGenerator.generateBlockJson("brick3_granite_carved");
        WallGenerator.generateBlockJson("brick3_granite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Lhazar_Brick);
        SlabGenerator.generateBlockJson("brick3_lhazar");
        StairGenerator.generateBlockJson("brick3_lhazar");
        WallGenerator.generateBlockJson("brick3_lhazar");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Carved_Brick);
        SlabGenerator.generateBlockJson("brick3_sandstone_carved");
        StairGenerator.generateBlockJson("brick3_sandstone_carved");
        WallGenerator.generateBlockJson("brick3_sandstone_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Cracked_Brick);
        SlabGenerator.generateBlockJson("brick3_sandstone_cracked");
        StairGenerator.generateBlockJson("brick3_sandstone_cracked");
        WallGenerator.generateBlockJson("brick3_sandstone_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Red_Brick);
        SlabGenerator.generateBlockJson("brick3_sandstone_red");
        StairGenerator.generateBlockJson("brick3_sandstone_red");
        WallGenerator.generateBlockJson("brick3_sandstone_red");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Red_Carved_Brick);
        SlabGenerator.generateBlockJson("brick3_sandstone_red_carved");
        StairGenerator.generateBlockJson("brick3_sandstone_red_carved");
        WallGenerator.generateBlockJson("brick3_sandstone_red_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Red_Cracked_Brick);
        SlabGenerator.generateBlockJson("brick3_sandstone_red_cracked");
        StairGenerator.generateBlockJson("brick3_sandstone_red_cracked");
        WallGenerator.generateBlockJson("brick3_sandstone_red_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Basalt_Westeros_Carved_Brick);
        SlabGenerator.generateBlockJson("brick4_basalt_westeros_carved");
        StairGenerator.generateBlockJson("brick4_basalt_westeros_carved");
        WallGenerator.generateBlockJson("brick4_basalt_westeros_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Chalk_Brick);
        SlabGenerator.generateBlockJson("brick4_chalk");
        StairGenerator.generateBlockJson("brick4_chalk");
        WallGenerator.generateBlockJson("brick4_chalk");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sandstone_Lapis_Brick);
        SlabGenerator.generateBlockJson("brick4_sandstone_lapis");
        StairGenerator.generateBlockJson("brick4_sandstone_lapis");
        WallGenerator.generateBlockJson("brick4_sandstone_lapis");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sothoryos_Brick);
        SlabGenerator.generateBlockJson("brick4_sothoryos");
        StairGenerator.generateBlockJson("brick4_sothoryos");
        WallGenerator.generateBlockJson("brick4_sothoryos");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sothoryos_Cracked_Brick);
        SlabGenerator.generateBlockJson("brick4_sothoryos_cracked");
        StairGenerator.generateBlockJson("brick4_sothoryos_cracked");
        WallGenerator.generateBlockJson("brick4_sothoryos_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sothoryos_Gold_Brick);
        SlabGenerator.generateBlockJson("brick4_sothoryos_gold");
        StairGenerator.generateBlockJson("brick4_sothoryos_gold");
        WallGenerator.generateBlockJson("brick4_sothoryos_gold");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sothoryos_Mossy_Brick);
        SlabGenerator.generateBlockJson("brick4_sothoryos_mossy");
        StairGenerator.generateBlockJson("brick4_sothoryos_mossy");
        WallGenerator.generateBlockJson("brick4_sothoryos_mossy");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sothoryos_Obsidian_Brick);
        SlabGenerator.generateBlockJson("brick4_sothoryos_obsidian");
        StairGenerator.generateBlockJson("brick4_sothoryos_obsidian");
        WallGenerator.generateBlockJson("brick4_sothoryos_obsidian");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Rhyolite_Carved_Brick);
        SlabGenerator.generateBlockJson("brick5_rhyolite_carved");
        StairGenerator.generateBlockJson("brick5_rhyolite_carved");
        WallGenerator.generateBlockJson("brick5_rhyolite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Brick);
        SlabGenerator.generateBlockJson("brick5_yiti");
        StairGenerator.generateBlockJson("brick5_yiti");
        WallGenerator.generateBlockJson("brick5_yiti");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Carved_Brick);
        SlabGenerator.generateBlockJson("brick5_yiti_carved");
        StairGenerator.generateBlockJson("brick5_yiti_carved");
        WallGenerator.generateBlockJson("brick5_yiti_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Cracked_Brick);
        SlabGenerator.generateBlockJson("brick5_yiti_cracked");
        StairGenerator.generateBlockJson("brick5_yiti_cracked");
        WallGenerator.generateBlockJson("brick5_yiti_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Flowers_Brick);
        SlabGenerator.generateBlockJson("brick5_yiti_flowers");
        StairGenerator.generateBlockJson("brick5_yiti_flowers");
        WallGenerator.generateBlockJson("brick5_yiti_flowers");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Mossy_Brick);
        SlabGenerator.generateBlockJson("brick5_yiti_mossy");
        StairGenerator.generateBlockJson("brick5_yiti_mossy");
        WallGenerator.generateBlockJson("brick5_yiti_mossy");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Labradorite_Brick);
        SlabGenerator.generateBlockJson("brick6_labradorite");
        StairGenerator.generateBlockJson("brick6_labradorite");
        WallGenerator.generateBlockJson("brick6_labradorite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Labradorite_Carved_Brick);
        SlabGenerator.generateBlockJson("brick6_labradorite_carved");
        StairGenerator.generateBlockJson("brick6_labradorite_carved");
        WallGenerator.generateBlockJson("brick6_labradorite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Labradorite_Cracked_Brick);
        SlabGenerator.generateBlockJson("brick6_labradorite_cracked");
        StairGenerator.generateBlockJson("brick6_labradorite_cracked");
        WallGenerator.generateBlockJson("brick6_labradorite_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Labradorite_Mossy_Brick);
        SlabGenerator.generateBlockJson("brick6_labradorite_mossy");
        StairGenerator.generateBlockJson("brick6_labradorite_mossy");
        WallGenerator.generateBlockJson("brick6_labradorite_mossy");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Swords_Brick);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Gold_Brick);
        SlabGenerator.generateBlockJson("brick6_yiti_gold");
        StairGenerator.generateBlockJson("brick6_yiti_gold");
        WallGenerator.generateBlockJson("brick6_yiti_gold");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Granite_Brick);
        SlabGenerator.generateBlockJson("brick6_yiti_granite");
        StairGenerator.generateBlockJson("brick6_yiti_granite");
        WallGenerator.generateBlockJson("brick6_yiti_granite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Yiti_Granite_Carved_Brick);
        SlabGenerator.generateBlockJson("brick6_yiti_granite_carved");
        StairGenerator.generateBlockJson("brick6_yiti_granite_carved");
        WallGenerator.generateBlockJson("brick6_yiti_granite_carved");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ice_Brick);
        PaneBlockGenerator.generateBlockJson("bronze_bars");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile);
        SlabGenerator.generateBlockJson("clay_tile");
        StairGenerator.generateBlockJson("clay_tile");
        WallGenerator.generateBlockJson("clay_tile");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Black);
        SlabGenerator.generateBlockJson("clay_tile_dyed_black");
        StairGenerator.generateBlockJson("clay_tile_dyed_black");
        WallGenerator.generateBlockJson("clay_tile_dyed_black");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Blue);
        SlabGenerator.generateBlockJson("clay_tile_dyed_blue");
        StairGenerator.generateBlockJson("clay_tile_dyed_blue");
        WallGenerator.generateBlockJson("clay_tile_dyed_blue");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Brown);
        SlabGenerator.generateBlockJson("clay_tile_dyed_brown");
        StairGenerator.generateBlockJson("clay_tile_dyed_brown");
        WallGenerator.generateBlockJson("clay_tile_dyed_brown");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Cyan);
        SlabGenerator.generateBlockJson("clay_tile_dyed_cyan");
        StairGenerator.generateBlockJson("clay_tile_dyed_cyan");
        WallGenerator.generateBlockJson("clay_tile_dyed_cyan");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Gray);
        SlabGenerator.generateBlockJson("clay_tile_dyed_gray");
        StairGenerator.generateBlockJson("clay_tile_dyed_gray");
        WallGenerator.generateBlockJson("clay_tile_dyed_gray");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Green);
        SlabGenerator.generateBlockJson("clay_tile_dyed_green");
        StairGenerator.generateBlockJson("clay_tile_dyed_green");
        WallGenerator.generateBlockJson("clay_tile_dyed_green");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Light_Blue);
        SlabGenerator.generateBlockJson("clay_tile_dyed_light_blue");
        StairGenerator.generateBlockJson("clay_tile_dyed_light_blue");
        WallGenerator.generateBlockJson("clay_tile_dyed_light_blue");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Lime);
        SlabGenerator.generateBlockJson("clay_tile_dyed_lime");
        StairGenerator.generateBlockJson("clay_tile_dyed_lime");
        WallGenerator.generateBlockJson("clay_tile_dyed_lime");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Magenta);
        SlabGenerator.generateBlockJson("clay_tile_dyed_magenta");
        StairGenerator.generateBlockJson("clay_tile_dyed_magenta");
        WallGenerator.generateBlockJson("clay_tile_dyed_magenta");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Orange);
        SlabGenerator.generateBlockJson("clay_tile_dyed_orange");
        StairGenerator.generateBlockJson("clay_tile_dyed_orange");
        WallGenerator.generateBlockJson("clay_tile_dyed_orange");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Pink);
        SlabGenerator.generateBlockJson("clay_tile_dyed_pink");
        StairGenerator.generateBlockJson("clay_tile_dyed_pink");
        WallGenerator.generateBlockJson("clay_tile_dyed_pink");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Purple);
        SlabGenerator.generateBlockJson("clay_tile_dyed_purple");
        StairGenerator.generateBlockJson("clay_tile_dyed_purple");
        WallGenerator.generateBlockJson("clay_tile_dyed_purple");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Red);
        SlabGenerator.generateBlockJson("clay_tile_dyed_red");
        StairGenerator.generateBlockJson("clay_tile_dyed_red");
        WallGenerator.generateBlockJson("clay_tile_dyed_red");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Silver);
        SlabGenerator.generateBlockJson("clay_tile_dyed_silver");
        StairGenerator.generateBlockJson("clay_tile_dyed_silver");
        WallGenerator.generateBlockJson("clay_tile_dyed_silver");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_White);
        SlabGenerator.generateBlockJson("clay_tile_dyed_white");
        StairGenerator.generateBlockJson("clay_tile_dyed_white");
        WallGenerator.generateBlockJson("clay_tile_dyed_white");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Clay_Tile_Dyed_Yellow);
        SlabGenerator.generateBlockJson("clay_tile_dyed_yellow");
        StairGenerator.generateBlockJson("clay_tile_dyed_yellow");
        WallGenerator.generateBlockJson("clay_tile_dyed_yellow");
        PaneBlockGenerator.generateBlockJson("gold_bars");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Apple_Planks);
        FenceGenerator.generateBlockJson("planks1_apple");
        SlabGenerator.generateBlockJson("planks1_apple");
        StairGenerator.generateBlockJson("planks1_apple");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Aramant_Planks);
        FenceGenerator.generateBlockJson("planks1_aramant");
        SlabGenerator.generateBlockJson("planks1_aramant");
        StairGenerator.generateBlockJson("planks1_aramant");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Banana_Planks);
        FenceGenerator.generateBlockJson("planks1_banana");
        SlabGenerator.generateBlockJson("planks1_banana");
        StairGenerator.generateBlockJson("planks1_banana");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Beech_Planks);
        FenceGenerator.generateBlockJson("planks1_beech");
        SlabGenerator.generateBlockJson("planks1_beech");
        StairGenerator.generateBlockJson("planks1_beech");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Catalpa_Planks);
        FenceGenerator.generateBlockJson("planks1_catalpa");
        SlabGenerator.generateBlockJson("planks1_catalpa");
        StairGenerator.generateBlockJson("planks1_catalpa");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Charred_Planks);
        FenceGenerator.generateBlockJson("planks1_charred");
        SlabGenerator.generateBlockJson("planks1_charred");
        StairGenerator.generateBlockJson("planks1_charred");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Cherry_Planks);
        FenceGenerator.generateBlockJson("planks1_cherry");
        SlabGenerator.generateBlockJson("planks1_cherry");
        StairGenerator.generateBlockJson("planks1_cherry");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Date_Palm_Planks);
        FenceGenerator.generateBlockJson("planks1_date_palm");
        SlabGenerator.generateBlockJson("planks1_date_palm");
        StairGenerator.generateBlockJson("planks1_date_palm");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Holly_Planks);
        FenceGenerator.generateBlockJson("planks1_holly");
        SlabGenerator.generateBlockJson("planks1_holly");
        StairGenerator.generateBlockJson("planks1_holly");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ibbinia_Planks);
        FenceGenerator.generateBlockJson("planks1_ibbinia");
        SlabGenerator.generateBlockJson("planks1_ibbinia");
        StairGenerator.generateBlockJson("planks1_ibbinia");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Larch_Planks);
        FenceGenerator.generateBlockJson("planks1_larch");
        SlabGenerator.generateBlockJson("planks1_larch");
        StairGenerator.generateBlockJson("planks1_larch");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mango_Planks);
        FenceGenerator.generateBlockJson("planks1_mango");
        SlabGenerator.generateBlockJson("planks1_mango");
        StairGenerator.generateBlockJson("planks1_mango");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mangrove_Planks);
        FenceGenerator.generateBlockJson("planks1_mangrove");
        SlabGenerator.generateBlockJson("planks1_mangrove");
        StairGenerator.generateBlockJson("planks1_mangrove");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Maple_Planks);
        FenceGenerator.generateBlockJson("planks1_maple");
        SlabGenerator.generateBlockJson("planks1_maple");
        StairGenerator.generateBlockJson("planks1_maple");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pear_Planks);
        FenceGenerator.generateBlockJson("planks1_pear");
        SlabGenerator.generateBlockJson("planks1_pear");
        StairGenerator.generateBlockJson("planks1_pear");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ulthos_Planks);
        FenceGenerator.generateBlockJson("planks1_ulthos");
        SlabGenerator.generateBlockJson("planks1_ulthos");
        StairGenerator.generateBlockJson("planks1_ulthos");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Almond_Planks);
        FenceGenerator.generateBlockJson("planks2_almond");
        SlabGenerator.generateBlockJson("planks2_almond");
        StairGenerator.generateBlockJson("planks2_almond");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Aspen_Planks);
        FenceGenerator.generateBlockJson("planks2_aspen");
        SlabGenerator.generateBlockJson("planks2_aspen");
        StairGenerator.generateBlockJson("planks2_aspen");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Baobab_Planks);
        FenceGenerator.generateBlockJson("planks2_baobab");
        SlabGenerator.generateBlockJson("planks2_baobab");
        StairGenerator.generateBlockJson("planks2_baobab");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Cedar_Planks);
        FenceGenerator.generateBlockJson("planks2_cedar");
        SlabGenerator.generateBlockJson("planks2_cedar");
        StairGenerator.generateBlockJson("planks2_cedar");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Chestnut_Planks);
        FenceGenerator.generateBlockJson("planks2_chestnut");
        SlabGenerator.generateBlockJson("planks2_chestnut");
        StairGenerator.generateBlockJson("planks2_chestnut");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Cypress_Planks);
        FenceGenerator.generateBlockJson("planks2_cypress");
        SlabGenerator.generateBlockJson("planks2_cypress");
        StairGenerator.generateBlockJson("planks2_cypress");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fir_Planks);
        FenceGenerator.generateBlockJson("planks2_fir");
        SlabGenerator.generateBlockJson("planks2_fir");
        StairGenerator.generateBlockJson("planks2_fir");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fotinia_Planks);
        FenceGenerator.generateBlockJson("planks2_fotinia");
        SlabGenerator.generateBlockJson("planks2_fotinia");
        StairGenerator.generateBlockJson("planks2_fotinia");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Green_Oak_Planks);
        FenceGenerator.generateBlockJson("planks2_green_oak");
        SlabGenerator.generateBlockJson("planks2_green_oak");
        StairGenerator.generateBlockJson("planks2_green_oak");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Lemon_Planks);
        FenceGenerator.generateBlockJson("planks2_lemon");
        SlabGenerator.generateBlockJson("planks2_lemon");
        StairGenerator.generateBlockJson("planks2_lemon");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Lime_Planks);
        FenceGenerator.generateBlockJson("planks2_lime");
        SlabGenerator.generateBlockJson("planks2_lime");
        StairGenerator.generateBlockJson("planks2_lime");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Mahogany_Planks);
        FenceGenerator.generateBlockJson("planks2_mahogany");
        SlabGenerator.generateBlockJson("planks2_mahogany");
        StairGenerator.generateBlockJson("planks2_mahogany");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Olive_Planks);
        FenceGenerator.generateBlockJson("planks2_olive");
        SlabGenerator.generateBlockJson("planks2_olive");
        StairGenerator.generateBlockJson("planks2_olive");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Orange_Planks);
        FenceGenerator.generateBlockJson("planks2_orange");
        SlabGenerator.generateBlockJson("planks2_orange");
        StairGenerator.generateBlockJson("planks2_orange");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pine_Planks);
        FenceGenerator.generateBlockJson("planks2_pine");
        SlabGenerator.generateBlockJson("planks2_pine");
        StairGenerator.generateBlockJson("planks2_pine");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Willow_Planks);
        FenceGenerator.generateBlockJson("planks2_willow");
        SlabGenerator.generateBlockJson("planks2_willow");
        StairGenerator.generateBlockJson("planks2_willow");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Dragon_Planks);
        FenceGenerator.generateBlockJson("planks3_dragon");
        SlabGenerator.generateBlockJson("planks3_dragon");
        StairGenerator.generateBlockJson("planks3_dragon");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Kanuka_Planks);
        FenceGenerator.generateBlockJson("planks3_kanuka");
        SlabGenerator.generateBlockJson("planks3_kanuka");
        StairGenerator.generateBlockJson("planks3_kanuka");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Palm_Planks);
        FenceGenerator.generateBlockJson("planks3_palm");
        SlabGenerator.generateBlockJson("planks3_palm");
        StairGenerator.generateBlockJson("planks3_palm");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Plum_Planks);
        FenceGenerator.generateBlockJson("planks3_plum");
        SlabGenerator.generateBlockJson("planks3_plum");
        StairGenerator.generateBlockJson("planks3_plum");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pomegranate_Planks);
        FenceGenerator.generateBlockJson("planks3_pomegranate");
        SlabGenerator.generateBlockJson("planks3_pomegranate");
        StairGenerator.generateBlockJson("planks3_pomegranate");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Redwood_Planks);
        FenceGenerator.generateBlockJson("planks3_redwood");
        SlabGenerator.generateBlockJson("planks3_redwood");
        StairGenerator.generateBlockJson("planks3_redwood");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Weirwood_Planks);
        FenceGenerator.generateBlockJson("planks3_weirwood");
        SlabGenerator.generateBlockJson("planks3_weirwood");
        StairGenerator.generateBlockJson("planks3_weirwood");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Rotten_Planks);
        FenceGenerator.generateBlockJson("planks_rotten_rotten");
        SlabGenerator.generateBlockJson("planks_rotten_rotten");
        StairGenerator.generateBlockJson("planks_rotten_rotten");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Red_Brick_Cracked);
        SlabGenerator.generateBlockJson("red_brick_cracked");
        StairGenerator.generateBlockJson("red_brick_cracked");
        WallGenerator.generateBlockJson("red_brick_cracked");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Red_Brick_Mossy);
        SlabGenerator.generateBlockJson("red_brick_mossy");
        StairGenerator.generateBlockJson("red_brick_mossy");
        WallGenerator.generateBlockJson("red_brick_mossy");
        PaneBlockGenerator.generateBlockJson("reed_bars");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Chalk);
        SlabGenerator.generateBlockJson("rock_chalk");
        StairGenerator.generateBlockJson("rock_chalk");
        WallGenerator.generateBlockJson("rock_chalk");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Labradorite);
        SlabGenerator.generateBlockJson("rock_labradorite");
        StairGenerator.generateBlockJson("rock_labradorite");
        WallGenerator.generateBlockJson("rock_labradorite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Rhyolite);
        SlabGenerator.generateBlockJson("rock_rhyolite");
        StairGenerator.generateBlockJson("rock_rhyolite");
        WallGenerator.generateBlockJson("rock_rhyolite");
        PaneBlockGenerator.generateBlockJson("silver_bars");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Smooth_Stone_Chalk);
        SlabGenerator.generateBlockJson("smooth_stone_chalk");
        StairGenerator.generateBlockJson("smooth_stone_chalk");
        WallGenerator.generateBlockJson("smooth_stone_chalk");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Smooth_Stone_Labradorite);
        SlabGenerator.generateBlockJson("smooth_stone_labradorite");
        StairGenerator.generateBlockJson("smooth_stone_labradorite");
        WallGenerator.generateBlockJson("smooth_stone_labradorite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Smooth_Stone_Rhyolite);
        SlabGenerator.generateBlockJson("smooth_stone_rhyolite");
        StairGenerator.generateBlockJson("smooth_stone_rhyolite");
        WallGenerator.generateBlockJson("smooth_stone_rhyolite");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Thatch_Floor);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Thatch_Reed);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Thatch_Thatch);
        blockStateModelGenerator.registerLog(GOTBlocks.Catalpa_Wood_Beam).log(GOTBlocks.Catalpa_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Charred_Wood_Beam).log(GOTBlocks.Charred_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Ibbinia_Wood_Beam).log(GOTBlocks.Ibbinia_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Ulthos_Wood_Beam).log(GOTBlocks.Ulthos_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Aramant_Wood_Beam).log(GOTBlocks.Aramant_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Banana_Wood_Beam).log(GOTBlocks.Banana_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Beech_Wood_Beam).log(GOTBlocks.Beech_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Holly_Wood_Beam).log(GOTBlocks.Holly_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Date_Palm_Wood_Beam).log(GOTBlocks.Date_Palm_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Larch_Wood_Beam).log(GOTBlocks.Larch_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Mangrove_Wood_Beam).log(GOTBlocks.Mangrove_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Maple_Wood_Beam).log(GOTBlocks.Maple_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Baobab_Wood_Beam).log(GOTBlocks.Baobab_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Cedar_Wood_Beam).log(GOTBlocks.Cedar_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Chestnut_Wood_Beam).log(GOTBlocks.Chestnut_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Fir_Wood_Beam).log(GOTBlocks.Fir_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Lemon_Wood_Beam).log(GOTBlocks.Lemon_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Lime_Wood_Beam).log(GOTBlocks.Lime_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Orange_Wood_Beam).log(GOTBlocks.Orange_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Pine_Wood_Beam).log(GOTBlocks.Pine_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Cypress_Wood_Beam).log(GOTBlocks.Cypress_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Mahogany_Wood_Beam).log(GOTBlocks.Mahogany_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Olive_Wood_Beam).log(GOTBlocks.Olive_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Willow_Wood_Beam).log(GOTBlocks.Willow_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Almond_Wood_Beam).log(GOTBlocks.Almond_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Aspen_Wood_Beam).log(GOTBlocks.Aspen_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Fotinia_Wood_Beam).log(GOTBlocks.Fotinia_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Green_Oak_Wood_Beam).log(GOTBlocks.Green_Oak_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Palm_Wood_Beam).log(GOTBlocks.Palm_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Plum_Wood_Beam).log(GOTBlocks.Plum_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Pomegranate_Wood_Beam).log(GOTBlocks.Pomegranate_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Redwood_Wood_Beam).log(GOTBlocks.Redwood_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Dragon_Wood_Beam).log(GOTBlocks.Dragon_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Kanuka_Wood_Beam).log(GOTBlocks.Kanuka_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Weirwood_Wood_Beam).log(GOTBlocks.Weirwood_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Apple_Wood_Beam).log(GOTBlocks.Apple_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Cherry_Wood_Beam).log(GOTBlocks.Cherry_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Mango_Wood_Beam).log(GOTBlocks.Mango_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Pear_Wood_Beam).log(GOTBlocks.Pear_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Rotten_Wood_Beam).log(GOTBlocks.Rotten_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Ibben_Wood_Beam).log(GOTBlocks.Ibben_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Gold_Ibben_Wood_Beam).log(GOTBlocks.Gold_Ibben_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Birch_Wood_Beam).log(GOTBlocks.Birch_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Jungle_Wood_Beam).log(GOTBlocks.Jungle_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Oak_Wood_Beam).log(GOTBlocks.Oak_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Spruce_Wood_Beam).log(GOTBlocks.Spruce_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Acacia_Wood_Beam).log(GOTBlocks.Acacia_Wood_Beam);
        blockStateModelGenerator.registerLog(GOTBlocks.Dark_Oak_Wood_Beam).log(GOTBlocks.Dark_Oak_Wood_Beam);

        /*DECORATION */
        blockStateModelGenerator.registerTorch(GOTBlocks.Asshai_Torch, GOTBlocks.Asshai_WallTorch);
        BirdCageGenerator.generateBlockJson("bird_cage_bronze");
        BirdCageGenerator.generateBlockJson("bird_cage_gold");
        BirdCageGenerator.generateBlockJson("bird_cage_iron");
        BirdCageGenerator.generateBlockJson("bird_cage_silver");
        BirdCageGenerator.generateBlockJson("bird_cage_wood_wood");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Amber_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Coral_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Opal_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Pearl_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Ruby_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sapphire_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Topaz_Gem_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Bronze_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Saltpeter_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Silver_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Sulfur_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Tin_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Valyrian_Metal_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Alloy_Steel_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Gilded_Iron_Block);
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Salt_Metal_Block);
        PlateBlockGenerator.generateBlockJson("ceramic_plate");
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Asshai, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Bronze, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Gold, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Iron, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Silver, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerTintableCross(GOTBlocks.Chandelier_Valyrian, BlockStateModelGenerator.TintType.TINTED);
        blockStateModelGenerator.registerBed(GOTBlocks.Fur_Bed, Blocks.BROWN_WOOL);
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Fuse, BlockStateModelGenerator.TintType.NOT_TINTED);
        //blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Fine_Glass);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Fine_Glass, GOTBlocks.Fine_Glass_Pane);
        PlateBlockGenerator.generateBlockJson("plate");
        blockStateModelGenerator.registerCubeAllModelTexturePool(GOTBlocks.Rope);
        blockStateModelGenerator.registerDoubleBlock(GOTBlocks.Sothoryos_Torch, BlockStateModelGenerator.TintType.NOT_TINTED);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Black_Fine_Glass, GOTBlocks.Black_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Blue_Fine_Glass, GOTBlocks.Blue_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Brown_Fine_Glass, GOTBlocks.Brown_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Cyan_Fine_Glass, GOTBlocks.Cyan_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Gray_Fine_Glass, GOTBlocks.Gray_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Green_Fine_Glass, GOTBlocks.Green_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Light_Blue_Fine_Glass, GOTBlocks.Light_Blue_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Lime_Fine_Glass, GOTBlocks.Lime_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Magenta_Fine_Glass, GOTBlocks.Magenta_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Orange_Fine_Glass, GOTBlocks.Orange_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Pink_Fine_Glass, GOTBlocks.Pink_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Purple_Fine_Glass, GOTBlocks.Purple_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Red_Fine_Glass, GOTBlocks.Red_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Silver_Fine_Glass, GOTBlocks.Silver_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.White_Fine_Glass, GOTBlocks.White_Fine_Glass_Pane);
        blockStateModelGenerator.registerGlassPane(GOTBlocks.Yellow_Fine_Glass, GOTBlocks.Yellow_Fine_Glass_Pane);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Almond_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Apple_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Aramant_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Aspen_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Banana_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Baobab_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Beech_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Catalpa_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Cedar_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Charred_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Cherry_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Chestnut_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Cypress_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Date_Palm_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Dragon_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Fir_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Fotinia_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Green_Oak_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Holly_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Ibbinia_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Kanuka_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Larch_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Lemon_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Lime_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Mahogany_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Mango_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Mangrove_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Maple_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Olive_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Orange_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Palm_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Pear_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Pine_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Plum_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Pomegranate_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Redwood_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Rotten_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Ulthos_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Weirwood_Trapdoor);
        blockStateModelGenerator.registerOrientableTrapdoor(GOTBlocks.Willow_Trapdoor);
        blockStateModelGenerator.registerDoor(GOTBlocks.Almond_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Apple_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Aramant_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Aspen_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Banana_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Baobab_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Beech_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Catalpa_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Cedar_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Charred_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Cherry_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Chestnut_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Cypress_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Date_Palm_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Dragon_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Fir_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Fotinia_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Green_Oak_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Holly_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Ibbinia_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Kanuka_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Larch_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Lemon_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Lime_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Mahogany_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Mango_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Mangrove_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Maple_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Olive_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Orange_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Palm_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Pear_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Pine_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Plum_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Pomegranate_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Redwood_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Rotten_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Ulthos_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Weirwood_Door);
        blockStateModelGenerator.registerDoor(GOTBlocks.Willow_Door);
        PaneBlockGenerator.generateBlockJson("ulthos_bars");
        blockStateModelGenerator.registerTorch(GOTBlocks.Ulthos_Torch, GOTBlocks.Ulthos_WallTorch);
        PaneBlockGenerator.generateBlockJson("valyrian_bars");
        FireGenerator.generateBlockJson("wild_fire");
        PlateBlockGenerator.generateBlockJson("wood_plate");

    }


    @Override
    public void generateItemModels(ItemModelGenerator itemModelGenerator) {
        /* LEGENDARY WEAPONS */
        itemModelGenerator.register(GOTWeapons.Areo_Hotah_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Baelish_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Beric_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Blackfyre, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bolton_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Brightroar, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Celtigar_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Daario_Arakh, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Dark_Sister, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Darkstar, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Dawn, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Eddard_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Euron_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Forrester_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Gendry_Hammer, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Tormund_Sword, Models.HANDHELD);

        /* WEAPONS */
        itemModelGenerator.register(GOTWeapons.Alloy_Steel_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Alloy_Steel_Dagger_Poisoned, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Alloy_Steel_Halberd, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Alloy_Steel_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Archmag_Staff, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Battleaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Bow, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Dagger_Poisoned, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Hammer, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Spear, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Staff, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Asshai_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Black_Arakh, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Battleaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Dagger_Poisoned, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Spear, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Sword, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Bronze_Throwing_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Bow, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Dagger, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Dagger_Poisoned, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Hammer, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Pike, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Polearm, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Spear, Models.HANDHELD);
        itemModelGenerator.register(GOTWeapons.Essos_Sword, Models.HANDHELD);

        /* INGREDENTS */
        itemModelGenerator.register(GOTOther.Alloy_Steel_Ingot, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Bronze_Ingot, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Obsidian_Shard, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Silver_Ingot, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Tin_Ingot, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Valyrian_Ingot, Models.GENERATED);
        itemModelGenerator.register(GOTOther.Yiti_Steel_Ingot, Models.GENERATED);

        /* TOOLS */
        itemModelGenerator.register(GOTTools.Alloy_Steel_Pickaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Alloy_Steel_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Alloy_Steel_Hoe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Alloy_Steel_Shovel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Bronze_Pickaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Bronze_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Bronze_Hoe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Bronze_Shovel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Sothoryos_Pickaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Sothoryos_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Sothoryos_Hoe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Sothoryos_Shovel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Pickaxe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Axe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Hoe, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Shovel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Chisel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Chisel, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Valyrian_Mattock, Models.HANDHELD);
        itemModelGenerator.register(GOTTools.Wildling_Axe, Models.HANDHELD);


        /* FOOD */
    }
}
